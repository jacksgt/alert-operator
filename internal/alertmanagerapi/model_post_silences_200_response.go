/*
Alertmanager API

API of the Prometheus Alertmanager (https://github.com/prometheus/alertmanager)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alertmanagerapi

import (
	"encoding/json"
)

// checks if the PostSilences200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostSilences200Response{}

// PostSilences200Response struct for PostSilences200Response
type PostSilences200Response struct {
	SilenceID *string `json:"silenceID,omitempty"`
}

// NewPostSilences200Response instantiates a new PostSilences200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostSilences200Response() *PostSilences200Response {
	this := PostSilences200Response{}
	return &this
}

// NewPostSilences200ResponseWithDefaults instantiates a new PostSilences200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostSilences200ResponseWithDefaults() *PostSilences200Response {
	this := PostSilences200Response{}
	return &this
}

// GetSilenceID returns the SilenceID field value if set, zero value otherwise.
func (o *PostSilences200Response) GetSilenceID() string {
	if o == nil || IsNil(o.SilenceID) {
		var ret string
		return ret
	}
	return *o.SilenceID
}

// GetSilenceIDOk returns a tuple with the SilenceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSilences200Response) GetSilenceIDOk() (*string, bool) {
	if o == nil || IsNil(o.SilenceID) {
		return nil, false
	}
	return o.SilenceID, true
}

// HasSilenceID returns a boolean if a field has been set.
func (o *PostSilences200Response) HasSilenceID() bool {
	if o != nil && !IsNil(o.SilenceID) {
		return true
	}

	return false
}

// SetSilenceID gets a reference to the given string and assigns it to the SilenceID field.
func (o *PostSilences200Response) SetSilenceID(v string) {
	o.SilenceID = &v
}

func (o PostSilences200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostSilences200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SilenceID) {
		toSerialize["silenceID"] = o.SilenceID
	}
	return toSerialize, nil
}

type NullablePostSilences200Response struct {
	value *PostSilences200Response
	isSet bool
}

func (v NullablePostSilences200Response) Get() *PostSilences200Response {
	return v.value
}

func (v *NullablePostSilences200Response) Set(val *PostSilences200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSilences200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSilences200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSilences200Response(val *PostSilences200Response) *NullablePostSilences200Response {
	return &NullablePostSilences200Response{value: val, isSet: true}
}

func (v NullablePostSilences200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSilences200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


