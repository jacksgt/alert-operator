/*
Alertmanager API

API of the Prometheus Alertmanager (https://github.com/prometheus/alertmanager)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alertmanagerapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertmanagerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertmanagerConfig{}

// AlertmanagerConfig struct for AlertmanagerConfig
type AlertmanagerConfig struct {
	Original string `json:"original"`
}

type _AlertmanagerConfig AlertmanagerConfig

// NewAlertmanagerConfig instantiates a new AlertmanagerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertmanagerConfig(original string) *AlertmanagerConfig {
	this := AlertmanagerConfig{}
	this.Original = original
	return &this
}

// NewAlertmanagerConfigWithDefaults instantiates a new AlertmanagerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertmanagerConfigWithDefaults() *AlertmanagerConfig {
	this := AlertmanagerConfig{}
	return &this
}

// GetOriginal returns the Original field value
func (o *AlertmanagerConfig) GetOriginal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Original
}

// GetOriginalOk returns a tuple with the Original field value
// and a boolean to check if the value has been set.
func (o *AlertmanagerConfig) GetOriginalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Original, true
}

// SetOriginal sets field value
func (o *AlertmanagerConfig) SetOriginal(v string) {
	o.Original = v
}

func (o AlertmanagerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertmanagerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["original"] = o.Original
	return toSerialize, nil
}

func (o *AlertmanagerConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"original",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertmanagerConfig := _AlertmanagerConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertmanagerConfig)

	if err != nil {
		return err
	}

	*o = AlertmanagerConfig(varAlertmanagerConfig)

	return err
}

type NullableAlertmanagerConfig struct {
	value *AlertmanagerConfig
	isSet bool
}

func (v NullableAlertmanagerConfig) Get() *AlertmanagerConfig {
	return v.value
}

func (v *NullableAlertmanagerConfig) Set(val *AlertmanagerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertmanagerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertmanagerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertmanagerConfig(val *AlertmanagerConfig) *NullableAlertmanagerConfig {
	return &NullableAlertmanagerConfig{value: val, isSet: true}
}

func (v NullableAlertmanagerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertmanagerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


